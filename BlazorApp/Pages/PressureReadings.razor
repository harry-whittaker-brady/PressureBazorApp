@page "/pressureReadings"

@using BlazorApp.Data
@using Domain.Models
@inject PressureReadingService service

<h1>Pressure Readings</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (service == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@baseReading" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <InputNumber id="Raw reading" @bind-Value="baseReading.RawValue" />

        <button type="submit">Submit</button>
    </EditForm>


    <button class="btn btn-primary" @onclick="service.AddReading">Generate pressure reading</button>
    <button class="btn btn-primary" @onclick="service.Clear">Clear pressure readings</button>

    <table class="table">
        <thead>
            <tr>
                <th>Raw value</th>
                <th>BAR</th>
                <th>PSI</th>
                <th>Timestamp</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entity in service.GetAll())
            {
                <tr>
                    <td>@entity.RawValue</td>
                    <td>@entity.BAR</td>
                    <td>@entity.PSI</td>
                    <td>@entity.TimeStamp</td>
                    <button class="btn btn-primary" @onclick="@(e => service.Remove(entity))">Remove</button>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    BasePressureReading baseReading = new BasePressureReading();

    private void HandleValidSubmit()
    {
        var reading = service.CalculatePressureReading(baseReading);
        reading.TimeStamp = DateTimeOffset.UtcNow;
        service.Add(reading);
    }
}
